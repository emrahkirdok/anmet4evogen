---
title: "Aşamalı Azalış - 1"
author: "Emrah Kırdök, Ph.D."
date: "2023-06-23"
categories: [türkçe, akademi, makina öğrenmesi]
lang: tr
draft: true
---

Acaba chatgpt nasıl çalışıyor? Ya da bir araba kendini nasıl sürüyor? Merak ediyor musununz?

Bir tahmin oyunu oynadığınızı varsayalım. Diyelim ki rastgele bir sayı tuttunuz, ve karşınızdaki kişiden bunu tahmin etmesini istiyorsunuz. Her tahminin sonucunda, sayıya olan yakınlığa bağlı olarak yukarı ve aşağı komutları ile yön veriyorsunuz ve yarışmacı belli bir süre sonra sizin aklınızda tuttuğunuz sayıya yaklaşmaya başlıyor.


Ne oldu burada? 

Elimizde bir veri var (tahmin edilen sayı)
Tahmin yap 
Hatanı ölç (tahmin edilen sayıdan az veya fazla)
Hatanı azaltacak tahmini yap
Bu şekilde tahmin edilen sayıyı bulana kadar devam et

Tebrikler, makine öğrenmesinin en önemli kavramlarından birisini öğrenmeye başaldınız! 

## Nedir bu model?

İlk önce model ne? Model dediğimiz şey, aslında incelediğimiz veriyi en düşük hata ile betimleyen bir matematiksel fonsksiyon. Bu model sayesinde tahmin yapabiliyoruz.

Burada önemli anahtar kelime ise hata miktarı. Yani, modeimiz, veri noktalarına ço büyük oranda uyum göstermeli

## Doğrusal modeller

Gelin bu işi çok basit hale getirelim. Doğrusal modeller üzerinden bunu inceleyelim. Şekil -@fig-lm-1' e bakalım:

```{r fig-lm-1}
library(ggplot2)
set.seed(123)

x <- runif(50, -5, 5)
y <- x + rnorm(50) + 3
df <- data.frame(y,x)

ggplot(data = df, aes(y=y,x=x)) + geom_point()
```

Burada normal bir dağıımıa sahip $x$ ve $y$ verilerini simüle ettik. Bu iki veri seti alında birbiriyle doğrusal bir ilişki içerisinde. Biz bu veriyi, en düşük hata ile betimleyen modeli oluşturmak istersek, aslında bir çizgi çekmemiz gerekir. İşte bu çizgi bizim modelimizi tanımlar. 

Sonraki sorumuz ise, bu veriyi tanımlayan en iyi doğrıuy nasıl çizebilirz?

## Bir doğru çizmek

Analitik geometri derslerinden hatırlayaım, koordinat ekseninde bir doğru çizmek için iki tane parametreye ihtiyacımız var:

+ Doğrunun $y$ eksenini kestiği nokta, (intercep, $\beta_{0}$)
+ Kesme noktasındaki eğim, (slope, $\beta{1}$)

Bu iki parametreyi kullanarak, bir doğruyu aşağıdaki matematiksel formül ile ifade edebiliriz:

$$
y = \beta_{0} + \beta_{1}*x
$$

Peki, bu doğruyu nereye çizelim? Mesela, $\beta_{0} = 0$ ve $\beta_{1} = 0$ değerlerini kullanarak bir doğru çizelim.

```{r}
ggplot(data = df, aes(y=y,x=x)) + geom_point() + geom_abline(intercept = 0, slope = 0, color = "red")
```

Sizce bu doğru, veriyi ifade ediyor mu? Büyük bir ihtimalle hayır!  Oldukça hatalı bir model aslında. Genel kurala göre bütün modeller yanlıştır, ancak bazıları kulanışlıdır.

Bir modelin başarısı, onun hata ölçümüne bağlıır. Bundan sonraki adım, hatamızı ölçmek...

## Modelin hatasını ölçmek

Peki, şimdi modeleimiz ne kadar başarılı ona bakalım. Önceki örneğimizde tahmin yapmıştık. Bu model aslında $x$ değişkenlerini kullanarak, $y$ değişkenini tahmin etmemizi sağlıyır. Mesela birinci veri noktasona bakalım:

```{r}
df[1,]
```

Peki, şimdi oluşturduğumuz modele göre $x=-2.124225$ verdiğimizde, $y$ ne oluyor ona bakalım. Çok basit bir şekilde $y = \beta_{0} + \beta_{1}*x$ denkleminde, $x=-2.124225$, $\beta_{0} = 0$ ve $\beta_{1} = 0$  parametrelerini yerlerine koyalım:

```{r}

y = 0 + 0 * (-2.124225)
y
```

Evet, y için 0 değerini elde ettik. Peki ne kadar hata yaptık? Tahmin ettiğimiz değerden, gerçek y değerini çıkartıp, mutlak değerini alırsak, hata oranımız öğrenebilriiz:

```{r}
abs(0 - (-2.124225))
```

Bu değer artık (residual) olarak isimlendirilir, ve o noktadaki hata oranımızı temsil eder. Gelin bunu bütün değerler için tekrar ederlim. Önce,  $\beta_{0} = 0$ ve $\beta_{1} = 0$ parameterinei göre oluşturduğumuz doğrusal modelde, $x$ girdilerini kullanarak, $y$ tahmini yapalım ve model üzerinde hataları görselleştirelim:

```{r}
df$y.pred <- 0 + df$x * 0

ggplot(data = df, aes(y=y,x=x)) + geom_point() + geom_segment(aes(xend = x, yend = y.pred)) + geom_abline(intercept = 0, slope = 0, color = "red") 
```

Burada neye dikkat etmeliyiz? Gerçek $y$ değerleri ile tahmin edilen $y$ değerleri arasında çok fark var. Bu aslında bizim modelimizin hatasını göstermekte. Bizim amacımız, işte bu hata oranını minimize eden Beta0 ve beta1 parametlerini tahmin etmek.

## Hata dediğin nedir ki?

```{r}
cost_history <- double()
theta_history <- list()
theta <- matrix(c(0,0), nrow=2)

# add a column of 1's for the intercept coefficient
X <- cbind(1, matrix(x))
alpha <- 0.01

```

```{r}

error <- (X %*% theta - y)
delta <- t(X) %*% error / length(y)
theta <- theta - alpha * delta

delta[1]<10^-6

df$y.pred <- theta[1] + df$x * theta[2]

ggplot(data = df, aes(y=y,x=x)) + geom_point() + geom_segment(aes(xend = x, yend = y.pred)) + geom_abline(intercept = theta[1], slope = theta[2], color = "red")
```
